{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/alson-kali/PROGRAMMING/alsongard/mydevportfolio/client/app/contact/page.tsx"],"sourcesContent":["\"use client\"; // using use client as this form requires client(user) interaction, useState\n\nimport React, {useState} from \"react\";\nimport emailjs from '@emailjs/browser';\nimport { EmailJSResponseStatus } from \"@emailjs/browser\";\nimport axios from \"axios\";\n\n\nfunction Contact()\n{\n\n    const [formData, setFormData] = React.useState({\n        name: \"\",\n        email: \"\",\n        phoneNumber: \"\",\n        projectInfo: \"\",\n    })\n\n    type formInput  = HTMLInputElement | HTMLTextAreaElement\n    function handleChange(event: React.ChangeEvent<formInput>)\n    {\n        const {name, value} = event.target;\n        setFormData((prevData)=>{\n            return (\n                {...prevData, \n                    [name]: value\n                }\n            )\n        })\n    }\n    const [successMsg, setSuccessMsg] = useState('');\n    async function  handleSubmit(event: React.FormEvent<HTMLFormElement>)\n    {\n        event.preventDefault();\n        setSuccessMsg(\"Waiting!!\")\n        // cont serviceId = process.env.\n        console.log(\"submitted\");\n        console.log(formData);\n\n        const public_id: string | undefined = process.env.NEXT_PUBLIC_USER_PUB_KEY;\n        const service_id: string | undefined = process.env.NEXT_PUBLIC_USER_SERVICE_ID;\n        const template_id: string | undefined = process.env.NEXT_PUBLIC_TEMPLATE_ID;\n        \n        // console.log(`public_id: ${public_id}\\n service_id: ${service_id}\\n template_id: ${template_id} `);\n        \n\n        const emailParams = {\n            userEmail: formData.email,\n            userName:formData.name,\n            userPhone:formData.phoneNumber,\n            projectInformation:formData.projectInfo\n        }\n\n        if (!public_id || !service_id || !template_id)\n        {\n            console.log('Error accessing keys');\n            return;\n        }\n        const response = await axios.post(\"http://localhost:5000/api/emails\", {\n            message: formData.projectInfo,\n            userEmail: formData.email,\n            name: formData.name,\n            phoneNumber: formData.phoneNumber\n        });\n        console.log('this is respone');\n        console.log(response);\n\n        if (response.data.success)\n        {\n            setSuccessMsg('Project Data has been sent successfully! I Will be inTouch');\n            setFormData(()=>{\n                    return {\n                        name: \"\",\n                        email: \"\",\n                        phoneNumber: \"\",\n                        projectInfo: \"\",\n                    }\n                })\n            setTimeout(()=>{\n                setSuccessMsg('');\n            }, 5000);\n        }\n        // emailjs\n        //     .send(service_id, template_id, emailParams, {publicKey: public_id})\n        //     .then((response)=>{\n        //         console.log(`Success! response_status: ${response.status} response.text: ${response.text} `)\n        //         setSuccessMsg('Project Data has been sent successfully! I Will be inTouch');\n        //         setTimeout(()=>{\n        //             setSuccessMsg('');\n\n        //         }, 5000);\n\n        //     },\n\n        //     (err)=>{console.log(`FAILED... : Error: ${err}`)}\n        // )\n\n        \n    }\n    return (\n        <section className=\" py-[100px] dark:bg-black dark:text-white\">\n            <h2 className=\"text-center text-[30px]\">Contact Me</h2>\n            <form onSubmit={handleSubmit} className=\"text-black flex flex-col w-[50%] mx-auto  \">\n                <label>Enter Name</label>\n                <input onChange={handleChange} name='name' value={formData.name} className=\"border-[2px] dark:text-white py-[2.5px] px-[3px] outline-none border-sky-300 rounded-md \" type='text' placeholder=\"Name...\"/>\n                <label className=\"mt-[9px]\">Enter email</label>\n                <input  onChange={handleChange} name='email' value={formData.email} className=\"border-[2px] dark:text-white py-[2.5px] outline-none px-[3px] border-sky-300 rounded-md\" type='email' placeholder=\"Enter email...\"/>\n                <label className=\"mt-[9px]\">Enter phone number</label>\n                <input  onChange={handleChange} name='phoneNumber' value={formData.phoneNumber} className=\"border-[2px] dark:text-white py-[2.5px] outline-none px-[3px] border-sky-300 rounded-md\" type='number' placeholder=\"Enter phonenumber...\"/>\n                <label className=\"mt-[9px]\">Enter Project Information</label>\n                <textarea  onChange={handleChange} name='projectInfo' value={formData.projectInfo}  className=\"border-[2px] dark:text-white py-[2.5px] outline-none px-[3px] border-sky-300 rounded-md\" placeholder=\"Provide a description of the project...\"/>\n\n                <input className=\"bg-[#75b98e] text-white w-[30%] mx-auto py-[2.5px] rounded-md my-[20px] hover:bg-green-600\" type=\"submit\" value=\"submit\"/>\n            </form>\n            {\n                successMsg && (<p className='bg-green-500 w-1/2 mx-auto py-[10px] px-[5px] rounded-md text-[17px] font-semi-bold'>Project Data has been sent successfully! I Will be inTouch</p>)\n            }\n        </section>\n    )\n}\n\nexport default Contact;"],"names":[],"mappings":";;;;AAuC8C;;AArC9C;AAGA;;;AALA,cAAc,4EAA4E;;;AAQ1F,SAAS;;IAGL,MAAM,CAAC,UAAU,YAAY,GAAG,wKAAK,CAAC,QAAQ,CAAC;QAC3C,MAAM;QACN,OAAO;QACP,aAAa;QACb,aAAa;IACjB;IAGA,SAAS,aAAa,KAAmC;QAErD,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG,MAAM,MAAM;QAClC,YAAY,CAAC;YACT,OACI;gBAAC,GAAG,QAAQ;gBACR,CAAC,KAAK,EAAE;YACZ;QAER;IACJ;IACA,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,eAAgB,aAAa,KAAuC;QAEhE,MAAM,cAAc;QACpB,cAAc;QACd,gCAAgC;QAChC,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QAEZ,MAAM;QACN,MAAM;QACN,MAAM;QAEN,qGAAqG;QAGrG,MAAM,cAAc;YAChB,WAAW,SAAS,KAAK;YACzB,UAAS,SAAS,IAAI;YACtB,WAAU,SAAS,WAAW;YAC9B,oBAAmB,SAAS,WAAW;QAC3C;QAEA;;QAKA,MAAM,WAAW,MAAM,mJAAK,CAAC,IAAI,CAAC,oCAAoC;YAClE,SAAS,SAAS,WAAW;YAC7B,WAAW,SAAS,KAAK;YACzB,MAAM,SAAS,IAAI;YACnB,aAAa,SAAS,WAAW;QACrC;QACA,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QAEZ,IAAI,SAAS,IAAI,CAAC,OAAO,EACzB;YACI,cAAc;YACd,YAAY;gBACJ,OAAO;oBACH,MAAM;oBACN,OAAO;oBACP,aAAa;oBACb,aAAa;gBACjB;YACJ;YACJ,WAAW;gBACP,cAAc;YAClB,GAAG;QACP;IACA,UAAU;IACV,0EAA0E;IAC1E,0BAA0B;IAC1B,uGAAuG;IACvG,uFAAuF;IACvF,2BAA2B;IAC3B,iCAAiC;IAEjC,oBAAoB;IAEpB,SAAS;IAET,wDAAwD;IACxD,IAAI;IAGR;IACA,qBACI,6LAAC;QAAQ,WAAU;;0BACf,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACpC,6LAAC;kCAAM;;;;;;kCACP,6LAAC;wBAAM,UAAU;wBAAc,MAAK;wBAAO,OAAO,SAAS,IAAI;wBAAE,WAAU;wBAA2F,MAAK;wBAAO,aAAY;;;;;;kCAC9L,6LAAC;wBAAM,WAAU;kCAAW;;;;;;kCAC5B,6LAAC;wBAAO,UAAU;wBAAc,MAAK;wBAAQ,OAAO,SAAS,KAAK;wBAAE,WAAU;wBAA0F,MAAK;wBAAQ,aAAY;;;;;;kCACjM,6LAAC;wBAAM,WAAU;kCAAW;;;;;;kCAC5B,6LAAC;wBAAO,UAAU;wBAAc,MAAK;wBAAc,OAAO,SAAS,WAAW;wBAAE,WAAU;wBAA0F,MAAK;wBAAS,aAAY;;;;;;kCAC9M,6LAAC;wBAAM,WAAU;kCAAW;;;;;;kCAC5B,6LAAC;wBAAU,UAAU;wBAAc,MAAK;wBAAc,OAAO,SAAS,WAAW;wBAAG,WAAU;wBAA0F,aAAY;;;;;;kCAEpM,6LAAC;wBAAM,WAAU;wBAA6F,MAAK;wBAAS,OAAM;;;;;;;;;;;;YAGlI,4BAAe,6LAAC;gBAAE,WAAU;0BAAsF;;;;;;;;;;;;AAIlI;GA/GS;KAAA;uCAiHM","debugId":null}}]
}